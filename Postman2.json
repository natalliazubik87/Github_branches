{
	"info": {
		"_postman_id": "aca1bd96-b9ca-43f1-ac83-8c35fdbc3d26",
		"name": "HW2_Postman_Natallia_Zubik",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"//     console.log(response.json());\r",
							"// });\r",
							"\r",
							"// Проверить на статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверить,что в body приходит правильный string\r",
							"\r",
							"pm.test(\"Body matches right string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверить на статус код 200\r",
							"\r",
							"pm.test(\"Status code 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Спарсить response body вjson\r",
							"\r",
							"var respData = pm.response.json();\r",
							"\r",
							"console.log(\"NAME = \" + respData.name);\r",
							"console.log(\"AGE = \" + respData.age);\r",
							"console.log(\"SALARY = \" + respData.salary);\r",
							"\r",
							"// Проверить,что name в ответе равно name в request(name вбить руками)\r",
							"\r",
							"pm.test(\"Your test name = Natasha\", function (){\r",
							"    pm.expect(respData.name).to.eql(\"Natasha\");\r",
							"});\r",
							"\r",
							"// Проверить,что age в ответе равно age в request(age вбить руками)\r",
							"\r",
							"pm.test(\"Your tset age = 34\", function () {\r",
							"    pm.expect(respData.age).to.eql(\"34\");\r",
							"});\r",
							"\r",
							"// Проверить,что salary в ответе равно salary в request(salary вбить руками)\r",
							"\r",
							"pm.test(\"Your test salary = 2000\", function () {\r",
							"    pm.expect(respData.salary).to.eql(2000);\r",
							"});\r",
							"\r",
							"// Спарсить request\r",
							"\r",
							"var reqData = request.data\r",
							"\r",
							"// Проверить,что name в ответе равно name s request(name забрать из request)\r",
							"\r",
							"pm.test(\"Name(resnonse)=name(request)\", function (){\r",
							"    pm.expect(respData.name).to.eql(reqData.name);\r",
							"});\r",
							"\r",
							"// Проверить,что age в ответе равно age s request(age забрать из request)\r",
							"\r",
							"pm.test(\"Age(response)=age(request)\", function () {\r",
							"    pm.expect(respData.age).to.eql(reqData.age);\r",
							"});\r",
							"\r",
							"// Проверить,что salary в ответе равно salary s request(salary забрать из request)\r",
							"\r",
							"pm.test(\"Salary(response)=salary(request)\", function() {\r",
							"    pm.expect(respData.salary).to.eql(respData.salary);\r",
							"});\r",
							"\r",
							"//Вывести в консоль параметр family из response\r",
							"\r",
							"console.log(\"Parametr family = \",respData.family);\r",
							"\r",
							"//Проверить,что u_salary_1_5_year в ответе равно salary*4(salary забрать из request)\r",
							"\r",
							"pm.test(\"u_salary_1_5_year=salary*4\", function () {\r",
							"    pm.expect(respData.family.u_salary_1_5_year).to.eql(reqData.salary*4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Natasha",
							"type": "text"
						},
						{
							"key": "age",
							"value": "34",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"\r",
							"pm.test(\"Status code = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Cпарсить response body в json\r",
							"\r",
							"var respData = pm.response.json();\r",
							"console.log(\"Name =\" + respData.name);\r",
							"console.log(\"Age =\" + respData.age);\r",
							"console.log(\"Salary =\" + respData.salary);\r",
							"\r",
							"//Спарсить request\r",
							"\r",
							" var reqData = pm.request.url.query.toObject();\r",
							" console.log(\"Name =\" + reqData.name);\r",
							" console.log(\"Age =\" + reqData.age);\r",
							" console.log(\"Salary =\" + reqData.salary);\r",
							"\r",
							" //Проверить,что name в ответе равно name s request(name забрать из request)\r",
							"\r",
							" pm.test(\"Name(response)=name(request)\", function () {\r",
							"     pm.expect(respData.name).to.eql(reqData.name);\r",
							" });\r",
							"\r",
							"//Проверить,что age в ответе равно age s request(age забрать из request)\r",
							"\r",
							" pm.test(\"Age(response)=age(request)\", function () {\r",
							"     pm.expect(respData.age).to.eql(reqData.age);\r",
							" });\r",
							"\r",
							" //Проверить,что salary в ответе равно salary s request(salary забрать из request)\r",
							"\r",
							"pm.test(\"Salary(response)=salary(request)\", function () {\r",
							"    pm.expect(respData.salary).to.eql(+reqData.salary);\r",
							"});\r",
							"\r",
							"//Вывести в консоль параметр family из response\r",
							"\r",
							"console.log(\"Параметр family =\",respData.family);\r",
							"\r",
							"//Проверить,что у параметра dog есть параметры name\r",
							"\r",
							" pm.test(\"Параметр dog имеет параметр name \", function () {\r",
							"         pm.expect(respData.family.pets.dog).to.have.property('name');\r",
							" });\r",
							"\r",
							"// Проверить,что параметр name имеет значение Lucky\r",
							"\r",
							"pm.test(\"Параметр dog.name имеет значение Luky\", function () {\r",
							"    pm.expect(respData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"//Проверить,что параметр age имеет значение 4\r",
							"\r",
							"pm.test(\"Параметр dog.age имеет значение 4\", function () {\r",
							"    pm.expect(respData.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=Natasha&age=34&salary=2000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Natasha"
						},
						{
							"key": "age",
							"value": "34"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Спарсить response body в json\r",
							"\r",
							"var respData = pm.response.json()\r",
							"console.log(\"Name =\" + respData.name);\r",
							"console.log(\"Age =\" + respData.age);\r",
							"console.log(\"Salary =\" + respData.salary);\r",
							"\r",
							"// Спарсить request\r",
							"\r",
							"var reqData = pm.request.url.query.toObject();\r",
							" console.log(\"Name =\" + reqData.name);\r",
							" console.log(\"Age =\" + reqData.age);\r",
							" console.log(\"Salary =\" + reqData.salary);\r",
							"\r",
							" //Проверить,что name в ответе равно name s request(name забрать из request)\r",
							"\r",
							" pm.test(\"Name(response)=name(request)\", function () {\r",
							"     pm.expect(respData.name).to.eql(reqData.name);\r",
							" });\r",
							"\r",
							"//Проверить,что age в ответе равно age s request(age забрать из request)\r",
							"\r",
							" pm.test(\"Age(response)=age(request)\", function () {\r",
							"     pm.expect(respData.age).to.eql(+reqData.age);\r",
							" });\r",
							"\r",
							" //Вывести в консоль параметр salary из request\r",
							"\r",
							" console.log(\"Salary.req =\"+reqData.salary);\r",
							"\r",
							" // Вывести в консоль параметр salary из response\r",
							"\r",
							" console.log(\"Salary.resp =\"+respData.salary);\r",
							"\r",
							" // Вывести в консоль 0-й элемент параметра salary из response\r",
							"\r",
							" console.log(\"0-й элемент salary.resp =\"+respData.salary[0]);\r",
							"\r",
							" // Вывести в консоль 1-й элемент параметра salary из response\r",
							"\r",
							" console.log(\"1-й элемент salary.resp =\"+respData.salary[1]);\r",
							"\r",
							" // Вывести в консоль 2-й элемент параметра salary из response\r",
							"\r",
							" console.log(\"2-й элемент salary.resp =\"+respData.salary[2]);\r",
							"\r",
							" //Проверить,что 0-й элемент параметра salary равен salary из request(salary забрать из request)\r",
							"\r",
							" pm.test(\"0-й элемент salary.resp = salary.req\", function () {\r",
							"     pm.expect(respData.salary[0]).to.eql(+reqData.salary);\r",
							" });\r",
							"\r",
							"//Проверить,что 1-й элемент параметра salary равен salary*2 из request(salary забрать из request)\r",
							"\r",
							" pm.test(\"1-й элемент salary.resp = 2*salary.req\", function () {\r",
							"     pm.expect(respData.salary[1]).to.eql+(reqData.salary*2);\r",
							" });\r",
							"\r",
							" //Проверить,что 2-й элемент параметра salary равен salary*3 из request(salary забрать из request)\r",
							"\r",
							" pm.test(\"2-й элемент salary.resp = 3*salary.req\", function () {\r",
							"     pm.expect(respData.salary[2]).to.eql+(reqData.salary*3);\r",
							" });\r",
							"\r",
							" //Передать в окружение переменную name\r",
							" \r",
							"var req_name = reqData.name;\r",
							"console.log(\"NAME = \" + req_name);\r",
							"pm.environment.set(\"name\",req_name);\r",
							"\r",
							"//Передать в окружение переменную age\r",
							" \r",
							"var req_age = reqData.age;\r",
							"console.log(\"AGE = \" + req_age);\r",
							"pm.environment.set(\"age\",req_age);\r",
							"\r",
							"//Передать в окружение переменную salary\r",
							" \r",
							"var req_salary = reqData.salary;\r",
							"console.log(\"SALARY = \" + req_salary);\r",
							"pm.environment.set(\"salary\",req_salary);\r",
							"\r",
							"//  Написать цикл который выведет в консоль по порядку элементы списка из параметра salary\r",
							"\r",
							"var salary = respData.salary\r",
							"\r",
							"for (i=0; i < salary.length; i++){\r",
							"     console.log(\"Salary_\" + i + \": \"+salary[i])\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=Natasha&age=34&salary=2000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Natasha"
						},
						{
							"key": "age",
							"value": "34"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус код 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"// Спарсить response body в json\r",
							"\r",
							"var respData = pm.response.json();\r",
							"\r",
							"console.log(\"NAME = \",respData.person.u_name);\r",
							"console.log(\"AGE = \",respData.person.u_age);\r",
							"console.log(\"SALARY = \",respData.start_qa_salary);\r",
							"\r",
							"// Спарсить request\r",
							"\r",
							"var reqData = request.data\r",
							"console.log(\"Name =\" + reqData.name);\r",
							" console.log(\"Age =\" + reqData.age);\r",
							" console.log(\"Salary =\" + reqData.salary);\r",
							"\r",
							" //Пункты 8-21 эндпоинта /user_info_2\r",
							"\r",
							"ShouldBeEqual = {\r",
							"    \"Проверка наличия в respone параметра start_qa_salary\":[true,respData.hasOwnProperty(\"start_qa_salary\")],\r",
							"    \"Проверка наличия в respone параметра qa_salary_after_6_months\":[true,respData.hasOwnProperty(\"qa_salary_after_6_months\")],\r",
							"    \"Проверка наличия в respone параметра qa_salary_after_12_months\":[true,respData.hasOwnProperty(\"qa_salary_after_12_months\")],\r",
							"    \"Проверка наличия в respone параметра qa_salary_after_1.5_year\":[true,respData.hasOwnProperty(\"qa_salary_after_1.5_year\")],\r",
							"    \"Проверка наличия в respone параметра qa_salary_after_3.5_years\":[true,respData.hasOwnProperty(\"qa_salary_after_3.5_years\")],\r",
							"    \"Проверка наличия в respone параметра person\":[true,respData.hasOwnProperty(\"person\")],\r",
							"    \"Start_qa_salary из response равен salary из request\":[respData.start_qa_salary,+(reqData.salary)],\r",
							"    \"qa_salary_after_6_months из response равен salary*2 из request\":[respData.qa_salary_after_6_months,+(reqData.salary*2)],\r",
							"    \"qa_salary_after_12_months из response равен salary*2.7 из request\":[respData.qa_salary_after_12_months,+(reqData.salary*2.7)],\r",
							"    \"qa_salary_after_1.5_year из response равен salary*3.3 из request\":[respData[\"qa_salary_after_1.5_year\"],+(reqData.salary*3.3)],\r",
							"    \"qa_salary_after_3.5_years из response равен salary*3.8 из request\":[respData[\"qa_salary_after_3.5_years\"],+(reqData.salary*3.8)],\r",
							"    \"В параметре person 1й элемент из u_name равен salary из request\":[respData.person.u_name[1],+reqData.salary],\r",
							"    \"Параметр u_age равен age из request\":[respData.person.u_age,+reqData.age],\r",
							"    \"u_salary_5_years равен salary*4.2 из request\":\r",
							"    [respData.person.u_salary_5_years,+(reqData.salary*4.2)],\r",
							"\r",
							"};\r",
							"\r",
							"for (const[testName,compare] of Object.entries(ShouldBeEqual)) {\r",
							"    pm.test(testName, function () {\r",
							"       pm.expect(compare[0]).to.eql(compare[1]);\r",
							"    });   \r",
							"}\r",
							"\r",
							"// Написать цикл,который выведет в консоль по порядку элементы списка из параметра person\r",
							"\r",
							"for(const[key,value] of Object.entries(respData.person)) {\r",
							"    console.log(\"Person :\"+key,value);\r",
							"};\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}