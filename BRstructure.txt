Структура баг-репорта

 -Описание(Краткое описание ошибки)
   *Шаги воспроизведения/Steps to reproduce(STR)
   *Фактический результат/Actual result
   *Ожидаемый результат/Expected result(ссылка на что-то,например требование и т.д)
 -Проект(Название проекта)
 -Компонент(Где именно обнаружен дефект)
 -Версия билда
 -Серьезность/Severity(Степень влияния данного бага на приложение.Назначается тестировщиком.):
   *Blocker(тип ошибки,приводящий программу в нерабочее состояние)
   *Critical(приводит ключевой функционал в нерабочее состояние,существенное отклонение от бизнес логики,потеря пользовательских данных)
   *Major(серьезные ошибки,свидетельствующие об отклонении от бизнес логики,но в то же время не имеют критическое воздействие на приложение)
   *Minor(незначительный дефект,не нарушающий функционал приложения,но который является несоответствием ожидаемому результату,например ошибка дизайна)
   *Trivial(не влияет на работу приложения,но может быть обнаружен визуально,например опечатка в тексте)
 -Приоритет/Priority(Очередь исправления бага.Определяет в основном PM.):
   *High
   *Medium
   *Low

   //Пример:Высокая Severity низкий Priority - Функция,которая редко используется пользователем,и она совсем не работает.
     Пример:Низкая Severity высокий Priority - гугл написано с 1 О,Gogle//
   //Вместо названий Severity и Priority могут обозначаться цифрами//

 -Статус(Статус бага в жизненном цикле)
 -Автор
 -Назначение
 -Окружение/Enviroment(Операционная система,ее разрядность,браузер,его версия)
   *Dev(Разработчики,иногда тестировщики)
   *Stage(Стабильная версия приложения,работают тестировщики)
   *Prod(Работают пользватели)
 -Прикрепленниые файлы(скриншот экрана с воспроизведения дефекта(с выделенным красным полем,указывающим на место ошибки) или видео воспроизведения дефекта)
